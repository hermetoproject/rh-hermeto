name: Gating

on:
  pull_request:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs: {}

jobs:
  integration-tests:
    name: Build container image and run integration tests on it

    # TODO: Replace this with ubuntu-latest once GH completes the migration of the VM runners to
    # ubuntu 24.04 and respect the YAML tag (revert the commit that added this)
    runs-on: ubuntu-24.04
    steps:
      - name: Install required packages
        run: |
          sudo apt-get update
          sudo apt-get install createrepo-c
          python3 -m venv /var/tmp/venv
          /var/tmp/venv/bin/pip3 install --upgrade pip nox tomlkit

      - name: add checkout action...
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: true

      - name: PyPI test server start
        run: |
          hermeto/tests/pypiserver/start.sh &

          # Testing basic HTTP request
          status=$(curl -sSI \
                        --output /dev/null \
                        --write-out %{http_code} \
                        --retry-delay 1 \
                        --retry 60 \
                        --retry-all-errors \
                        http://127.0.0.1:8080)
          [[ ${status} == "200" ]] || exit 1

      - name: DNF test server start
        run: |
          hermeto/tests/dnfserver/start.sh &

          # Testing basic HTTP request
          status=$(curl -sSI \
                        --output /dev/null \
                        --write-out %{http_code} \
                        --retry-delay 1 \
                        --retry 60 \
                        --retry-all-errors \
                        http://127.0.0.1:8081)
          [[ ${status} == "200" ]] || exit 1

          # Testing expected error on unauthenticated TLS access
          status=$(curl -ssI \
                        --output /dev/null \
                        --write-out %{http_code} \
                        --insecure \
                        https://127.0.0.1:8443)
          [[ ${status} == "400" ]] || exit 1

          # Testing TLS client authentication
          status=$(curl -sSI \
                        --output /dev/null \
                        --write-out %{http_code} \
                        --cacert hermeto/tests/dnfserver/certificates/CA.crt \
                        --key hermeto/tests/dnfserver/certificates/client.key \
                        --cert hermeto/tests/dnfserver/certificates/client.crt \
                        https://127.0.0.1:8443/pkg/redhat-release-9.4-0.5.el9.x86_64.rpm)
          [[ ${status} == "200" ]] || exit 1

      - name: Prefetch packages and build the Hermeto image hermetically
        run: |
          mkdir output

          # prefetch dependencies
          podman run --rm \
            -v $(realpath .):/tmp/sources:z \
            -v $(realpath ./output):/tmp/output:z \
            quay.io/konflux-ci/hermeto:latest \
            --log-level "DEBUG" \
            fetch-deps '[
              {"type": "pip", "path": "hermeto", "allow_binary": true},
              {"type": "pip", "allow_binary": true},
              {"type": "generic"},
              {"type": "rpm"}
            ]' \
            --source "/tmp/sources" \
            --output "/tmp/output" \
            --dev-package-managers

          # generate environment variables
          podman run --rm \
            -v $(realpath .):/tmp/sources:z \
            -v $(realpath ./output):/tmp/output:z \
            quay.io/konflux-ci/hermeto:latest \
            generate-env /tmp/output \
            --format env \
            --output /tmp/output/hermeto.env \
            --for-output-dir /cachi2/output

          # inject project files
          podman run --rm \
            -v $(realpath .):/tmp/sources:z \
            -v $(realpath ./output):/tmp/output:z \
            quay.io/konflux-ci/hermeto:latest \
            inject-files /tmp/output \
            --for-output-dir /cachi2/output

          mv ./output/hermeto.env .

          # use the cachi2 env variables in all RUN instructions in the Containerfile
          sed -i 's|^\s*run |RUN . /tmp/hermeto.env \&\& |i' "./Dockerfile.konflux"

          # build hermetically
          podman build -t hermeto:${{ github.sha }} \
            -v $(realpath ./output):/cachi2/output:z \
            -v $(realpath ./hermeto.env):/tmp/hermeto.env \
            -v $(realpath ./output/deps/rpm/x86_64/repos.d):/etc/yum.repos.d:z \
            --no-cache \
            --network=none \
            -f "./Dockerfile.konflux" \
            .

      - name: Check image created and application version
        run: |
          podman images | grep 'hermeto'
          podman run -t hermeto:${{ github.sha }} --version

      - name: Run integration tests on built image
        env:
          HERMETO_IMAGE: localhost/hermeto:${{ github.sha }}
          HERMETO_TEST_LOCAL_PYPISERVER: 'true'
          HERMETO_TEST_LOCAL_DNF_SERVER: 'true'
        run: |
          git config --global --add safe.directory "*"
          cd hermeto
          sed -i 's|--log-cli-level=WARNING|--log-cli-level=DEBUG|i' "./noxfile.py" 
          /var/tmp/venv/bin/nox -s integration-tests
